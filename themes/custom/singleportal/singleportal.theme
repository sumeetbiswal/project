<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\user\Entity\User;

/**
 *
 */
function singleportal_preprocess_page(&$variables) {

  if ($variables['is_front']) {
    $variables['#attached']['library'][] = 'singleportal/login-styling';
  }
  elseif (\Drupal::service('path.current')->getPath() == '/batch') {
    // No library.
  }
  else {
    $variables['#attached']['library'][] = 'singleportal/global-styling';
    $variables['#attached']['library'][] = 'singleportal/js-header';
    $variables['#attached']['library'][] = 'singleportal/js-footer';
  }

  if (\Drupal::service('path.current')->getPath() == '/home') {
    $variables['#attached']['library'][] = 'singleportal/dashboard';
  }

  $variables['site_name'] = \Drupal::config('system.site')->get('name');

  $variables['site_logo'] = \Drupal::service('file_url_generator')->generateAbsoluteString("public://logo.png");
  $variables['year'] = date('Y');
  $variables['base_path'] = base_path();

  $variables['white_box_exclud'] = FALSE;
  $white_box_exception = ['/profile'];
  if (in_array(\Drupal::service('path.current')->getPath(), $white_box_exception)) {
    $variables['white_box_exclud'] = TRUE;
    ;
  }

}

/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function singleportal_form_alter(&$form, $form_state, $form_id) {
  if ($form['#form_id'] == 'user_login_form') {
    $form['actions']['submit']['#attributes']['class'][] = 'btn btn-primary btn-block';
    $form['name']['#attributes']['class'][] = 'form-control';
    $form['name']['#attributes']['placeholder'] = t('Username');
    $form['pass']['#attributes']['class'][] = 'form-control';
    $form['pass']['#attributes']['placeholder'] = t('Password');
  }
}

/**
 * Implementation of hook_theme_suggestions_form_element_alter().
 */
/*function singleportal_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {

if (\Drupal::service('path.current')->getPath() == '/node') {
$suggestions[] = $variables['theme_hook_original'] . '--user-login-form';
}
}*/

/**
 * Implements hook_preprocess_menu()
 */
function singleportal_preprocess_menu(&$variables) {
  if ($variables['menu_name'] === 'main') {
    // Adding class name as my-class.
    // $variables['attributes']['class'][] = 'my-class';
    // kint($variables['items']);
    // unset($variables['items'][$key]);.
    $current_user = \Drupal::currentUser();
    // Check the menu permission.
    foreach ($variables['items'] as $key => $item) {

      $parent_item = FALSE;
      // kint(count($item['below']));.
      if (count($item['below']) > 0) {
        foreach ($item['below'] as $child_key => $child_item) {
          $permission = $child_item['url']->getOptions()['permissions'];
          if (!empty($permission)) {
            if ($current_user->hasPermission($permission)) {
              $parent_item = TRUE;
            }
            else {
              // Remove the child element from submenu list if the user does not have permissions.
              unset($variables['items'][$key]['below'][$child_key]);
            }
          }
          // If there is no permission display to all user.
          else {
            $parent_item = TRUE;
          }
        }
      }
      else {

        // Else part is for parent menu item which does not have any child.
        $permission = $item['url']->getOptions()['permissions'];
        if (!empty($permission)) {
          if ($current_user->hasPermission($permission)) {
            $parent_item = TRUE;
          }
        }
        // If there is no permission display to all user.
        else {
          $parent_item = TRUE;
        }
      }

      if (!$parent_item) {
        unset($variables['items'][$key]);
      }

    }

    foreach ($variables['items'] as $item) {
      // Get options.
      $options = $item['original_link']->getOptions();
      // kint($item);
      if ($options && isset($options['classes'])) {

        $classes_array = explode(' ', $options['classes']);
        foreach ($classes_array as $class) {
          // Add classes to class attribute
          // $item['attributes']->addClass(Html::cleanCssIdentifier($class, []));.
          if (isset($options['classes'])) {
            $item['attributes']->setAttribute('class', $options['classes']);
          }
          if (isset($options['permissions'])) {
            $item['attributes']->setAttribute('permissions', $options['permissions']);
          }
          if (isset($options['sub_menu_class'])) {
            $item['attributes']->setAttribute('sub_menu_column', $options['sub_menu_class']);
          }
        }
      }

    }

  }
}

/**
 *
 */
function singleportal_preprocess_menu__account(&$variables) {
  $user = \Drupal::currentUser();

  $libobj = \Drupal::service('employee.service');
  $variables['#cache']['max-age'] = 0;
  if ($user) {
    $username = User::load($user->id());
    $personal_details = $libobj->getPersonalDetailsById($username->id());

    if (!empty($personal_details)) {
      $gender = $personal_details->gender;
      $firstname = $personal_details->firstname;
    }
    $variables['username'] = (@$firstname == NULL) ? $username->getDisplayName() : $firstname;

    $variables['emailid'] = $username->getEmail();

    $user_pic = \Drupal::service('entity_type.manager')->getStorage('user')->load($user->id());

    if ($user_pic->user_picture->entity != NULL) {
      $variables['propic'] = \Drupal::service('file_url_generator')->generateAbsoluteString($user_pic->user_picture->entity->getFileUri());
    }
    else {
      global $base_url;
      $default_theme_name = \Drupal::config('system.theme')->get('default');
      $theme_path = \Drupal::service('extension.list.theme')->getPath($default_theme_name);

      if (@$gender == NULL) {
        $variables['propic'] = $base_url . '/' . $theme_path . '/assets/images/avatar/male.jpg';
      }
      elseif ($gender == 'F') {
        $variables['propic'] = $base_url . '/' . $theme_path . '/assets/images/avatar/female.jpg';
      }
      else {
        $variables['propic'] = $base_url . '/' . $theme_path . '/assets/images/avatar/male.jpg';
      }

    }
  }

}

/**
 *
 */
function singleportal_preprocess_html(&$variables) {

  $variables['attributes']['class'][] = 'fix-header';

}

/**
 *
 */
function singleportal_preprocess_block(&$variables) {
  if ($variables['plugin_id'] === 'system_powered_by_block') {
    $variables['year'] = date('Y');
  }
}

/**
 *
 */
function singleportal_preprocess_breadcrumb(&$variables) {
  $request = \Drupal::request();
  $route_match = \Drupal::routeMatch();
  $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());

  $variables['headtitle'] = $page_title;
  $variables['breadcrumb'][] = [
    'text' => $page_title,
  ];

  $variables['#cache']['contexts'][] = 'url';
}

/**
 *
 */
function singleportal_preprocess_block__system_branding_block(&$variables) {
  $variables['organisation_logo'] = file_create_url("public://logo.png");
}

/**
 *
 */
function singleportal_admin_theme_info() {
  echo "hiiiiiiiii";
  die;
}

/**
 *
 */
function singleportal_preprocess_table(&$variables) {
  $variables['attributes']['class'][] = 'table text-center table-hover table-striped table-bordered dataTable';
  $variables['attributes']['style'][] = 'text-align-last: center';
  // kint($variables);
}
