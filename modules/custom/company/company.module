<?php

use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

function company_theme($existing, $type, $theme, $path) {

  return array(
    'companyview' => array(
      'variables' => array('data' => NULL),
    ),
  );
}

function company_preprocess_image_widget(&$variables) {
    $element = $variables['element'];

    $variables['attributes'] = array('class' => array('image-widget', 'js-form-managed-file', 'form-managed-file', 'clearfix'));

    if (!empty($element['fids']['#value'])) {
      $file = reset($element['#files']);
      $element['file_' . $file->id()]['filename']['#suffix'] = ' <span class="file-size">(' . format_size($file->getSize()) . ')</span> ';
      $file_variables = array(
        'style_name' => $element['#preview_image_style'],
        'uri' => $file->getFileUri(),
      );

      // Determine image dimensions.
      if (isset($element['#value']['width']) && isset($element['#value']['height'])) {
        $file_variables['width'] = $element['#value']['width'];
        $file_variables['height'] = $element['#value']['height'];
      } else {
        $image = \Drupal::service('image.factory')->get($file->getFileUri());
        if ($image->isValid()) {
          $file_variables['width'] = $image->getWidth();
          $file_variables['height'] = $image->getHeight();
        }
        else {
          $file_variables['width'] = $file_variables['height'] = NULL;
        }
      }

      $element['preview'] = array(
        '#weight' => -10,
        '#theme' => 'image_style',
        '#width' => $file_variables['width'],
        '#height' => $file_variables['height'],
        '#style_name' => $file_variables['style_name'],
        '#uri' => $file_variables['uri'],
      );

      // Store the dimensions in the form so the file doesn't have to be
      // accessed again. This is important for remote files.
      $element['width'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['width'],
      );
      $element['height'] = array(
        '#type' => 'hidden',
        '#value' => $file_variables['height'],
      );
    }

    $variables['data'] = array();
    foreach (\Drupal\Core\Render\Element::children($element) as $child) {
      $variables['data'][$child] = $element[$child];
    }
}

/*
function company_preprocess_form_element(&$variables, $hook, &$info) {
	if (\Drupal::service('path.current')->getPath() == '/wordorder/add') {
  $info['template'] = 'form-element--multistep-form-three';
	}
}*/





function company_views_pre_render($view){

  //if ($view->name == 'branch_list') {

  $encrypt = \Drupal::service('encrypt.service');
  $lib = \Drupal::service('library.service');
  $department = \Drupal::service('department.service');

  $result = $view->result;
  foreach ($result as $i => $row) {
    $encrypted_codepk = $encrypt->encode($view->result[$i]->codepk);
    $view->result[$i]->srch_codevalues_description = $encrypted_codepk;

    if(isset($view->result[$i]->srch_codevalues_city) && !empty($view->result[$i]->srch_codevalues_city)){
      $view->result[$i]->srch_codevalues_city =  $lib->getCityNameById($view->result[$i]->srch_codevalues_city);
    }

    if(isset($view->result[$i]->srch_codevalues_state) && !empty($view->result[$i]->srch_codevalues_state)){
      $view->result[$i]->srch_codevalues_state =  $lib->getStateNameById($view->result[$i]->srch_codevalues_state);
    }

    if ($view->id() == 'designation') {
     // $view->result[$i]->srch_codevalues_parent = $department->getDepartmentNameById($view->result[$i]->srch_codevalues_parent);
    }

    /*$input = $view->exposed_raw_input;
    // Views Query.
    $query = $view->build_info['query'];
    // Left Join any table here.
    $query->leftJoin('srch_codevalues', 'srch_codevalues', 'srch_codevalues.codepk = srch_codevalues.parent');
    // Add fields of table you joined.
    $query->fields('parent');
    $query->distinct();
    // Re-construct the Views Query by adding left join.
    $view->build_info['query'] = $query;
    $view->build_info['count_query'] = $query;*/
    //need to write alter query

  }

  //}

}

function company_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() == 'designation') {
    kint($query);
      $configuration = [
        'type'       => 'LEFT',
        'table'      => 'srch_codevalues',
        'field'      => 'codepk',
        'left_table' => 'srch_codevalues',
        'left_field' => 'parent',
       // 'operator'   => '=',
      ];
      $join_obj = \Drupal\views\Views::pluginManager('join')->createInstance('standard', $configuration);


      $rel = $query->addRelationship('s1', $join_obj, 'parentw');
     // $query->addTable('webform_submission_data', $rel, $join_obj, 'webform_submission_field_job_center_posting_status');


     /* $join_obj->extra[] = array(
        'field'=>'name',
        'value' => 'status',
      );*/
      $join_obj->extra_type = 'AND';
     // $query->addWhere('', 'webform_submission_field_job_center_posting_status.value', 'reviewed', 'IN');
  }
}
